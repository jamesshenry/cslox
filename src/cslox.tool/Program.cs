if (args.Length == 0)
{
    Console.WriteLine("Usage: cslox.tool <source file>");
    System.Environment.Exit(64);
}

var outputDir = args[0];

DefineAst(
    outputDir,
    "Expr",
    [
        "Binary   : Expr left, Token operator, Expr right",
        "Grouping : Expr expression",
        "Literal  : object value",
        "Unary    : Token operator, Expr right",
    ]
);

static void DefineAst(string outputDir, string baseName, string[] types)
{
    var path = Path.Combine(outputDir, $"{baseName}.cs");
    using var writer = new StreamWriter(path);
    writer.WriteLine("// This file is generated by cslox.tool. Do not edit it manually.");
    writer.WriteLine($"namespace cslox;");
    writer.WriteLine($"abstract class {baseName} {{");

    foreach (var typ in types)
    {
        string className = typ.Split(':')[0].Trim();
        string fieldString = typ.Split(':')[1].Trim();
        DefineType(writer, baseName, className, fieldString);
    }
    writer.WriteLine($"}}");
    writer.Close();
}

static void DefineType(TextWriter writer, string baseName, string className, string fieldString)
{
    writer.WriteLine(
        $$"""
    class {{className}} : {{baseName}} 
    {
"""
    );

    writer.WriteLine(
        $$"""
        
"""
    );
}
