#!/usr/bin/dotnet run

#:package McMaster.Extensions.CommandLineUtils@4.1.1
#:package Bullseye@6.0.0
#:package SimpleExec@12.0.0

using Bullseye;
using McMaster.Extensions.CommandLineUtils;
using static Bullseye.Targets;
using static SimpleExec.Command;

Console.WriteLine(args.Length);

if (args.Length == 0)
{
    Console.WriteLine("Usage: cslox.tool <source file>");
    System.Environment.Exit(64);
}

var outputDir = args[0];

DefineAst(
    outputDir,
    "Expr",
    [
        "Binary   : Expr left, Token opr, Expr right",
        "Grouping : Expr expression",
        "Literal  : object value",
        "Unary    : Token opr, Expr right",
    ]
);

static void DefineAst(string outputDir, string baseName, string[] types)
{
    var path = Path.Combine(outputDir, $"{baseName}.cs");
    using var writer = new StreamWriter(path);
    writer.WriteLine("// This file is generated by cslox.tool. Do not edit it manually.");
    writer.WriteLine($"namespace cslox;\n");
    writer.WriteLine($"record {baseName}\n{{");

    foreach (var typ in types)
    {
        string className = typ.Split(':')[0].Trim();
        string fieldString = typ.Split(':')[1].Trim();
        DefineType(writer, baseName, className, fieldString);
    }
    writer.WriteLine($"}}");
    writer.Close();
}

static void DefineType(TextWriter writer, string baseName, string className, string fieldString)
{
    writer.WriteLine(
        $$"""
    record {{className}}({{fieldString}}) : {{baseName}};

"""
    );
}
