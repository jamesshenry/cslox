# https://taskfile.dev
version: "3"

dotenv: ["public.env", ".env"]

vars:
  # These are now the ONLY variables expected from the CI/CD workflow.
  APP_VERSION: "{{.APP_VERSION }}"
  GITHUB_REF_NAME: "{{.GITHUB_REF_NAME }}"

  MAIN_EXE: "{{if .PROJECT_TO_PUBLISH}}{{.APP_NAME}}.exe{{end}}"

includes:
  dotnet: { taskfile: ./.build/dotnet/Taskfile.yml, internal: true }
  velopack:
    { taskfile: ./.build/velopack/Taskfile.yml, optional: true, internal: true }

tasks:
  default:
    desc: "Runs the default build task"
    cmds: [{ task: build }]
  clean:
    desc: "Cleans the solution"
    cmds: [{ task: dotnet:clean }]
  build:
    desc: "Builds the solution in Release configuration"
    cmds: [{ task: dotnet:build }]
  test:
    desc: "Runs all tests in the solution"
    cmds: [{ task: dotnet:test }]
  lint:
    desc: "Runs the linter at the root of the project"
    cmds: [{ task: dotnet:lint }]
  format:
    desc: "Formats the codebase using CSharpier"
    cmds: [{ task: dotnet:format }]
  setup:
    silent: true
    desc: "Restores local .NET tools defined in the manifest"
    preconditions:
      - "[ -f .config/dotnet-tools.json ]"
    cmds:
      - cmd: dotnet tool restore > /dev/null
  get-version:
    desc: "Calculates the version from git history (for pre-release builds)"
    deps: ["setup"]
    cmds: ["dotnet minver --default-pre-release-identifiers preview.0 -v error"]

  # --- Simplified Release Task (For Local Testing Only) ---
  release:
    desc: "(LOCAL ONLY) Builds a single platform release for testing."
    vars:
      PRE_RELEASE_VERSION: { sh: task get-version }
      APP_VERSION: "{{.APP_VERSION | default .PRE_RELEASE_VERSION}}"
    cmds:
      - task: build-platform-release
        vars:
          OS: win
          ARCH: x64 # Hardcoded for simple local testing
          APP_VERSION: "{{.APP_VERSION}}"

  # --- NuGet Publishing Logic (Unchanged) ---
  pack-nuget:
    preconditions: ['{{ ne .PROJECT_TO_PACK "" }}']
    cmds: [{ task: dotnet:pack-nuget }]
  push-nuget:
    deps: ["pack-nuget"]
    preconditions:
      - '{{ ne .NUGET_API_KEY "" }}'
      - sh: git describe --tags --exact-match &>/dev/null
        msg: "Skipping NuGet push: This is a pre-release version (git height > 0)."
    cmds: [{ task: dotnet:push-nuget }]

  # --- CI Entrypoint for Building a Single Platform ---
  setup-velopack:
    desc: "Installs the Velopack CLI tool, if not already present"
    cmds: ["dotnet tool install --global vpk"]
    status: ["vpk --help"]

  build-platform-release:
    desc: "(CI USE) Builds and packs a release for a single target platform (RID)."
    deps: ["setup-velopack"]
    preconditions:
      - '{{ ne .PROJECT_TO_PUBLISH "" }}'
      - '{{ ne .OS "" }}'
      - '{{ ne .ARCH "" }}'
    cmds:
      - echo "Building platform release for {{.OS}}/{{.ARCH}} version {{.APP_VERSION}}"
      - task: dotnet:publish-app
        vars: { OS: "{{.OS}}", ARCH: "{{.ARCH}}" }
      - task: velopack:pack
        vars:
          { OS: "{{.OS}}", ARCH: "{{.ARCH}}", APP_VERSION: "{{.APP_VERSION}}" }
